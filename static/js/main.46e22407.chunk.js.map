{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"4NAAMA,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,6CACA,8CAMVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OAEI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJCA,MAUjB,OAAO,gCAAQJ,KAcJS,EAXD,SAACV,GACX,IAAOE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEtB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCevDE,E,4MA/CXC,aAAe,CACXN,KAAM,GACNC,IAAK,I,EAGTM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GACZ,MAAsBA,EAAMC,OAArBV,EAAP,EAAOA,KAAMW,EAAb,EAAaA,MAEb,EAAKC,SAAL,eACKZ,EAAOW,K,EAIhBE,WAAa,WACT,EAAKnB,MAAMoB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGvB,WACI,MAAsBS,KAAKR,MAAnBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACI,iCACI,uBAAOe,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eAEnB,uBAAOQ,QAAQ,MAAf,yBACA,uBACIC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAEnB,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GA1C/CO,aCiCJC,E,4MA9BXd,MAAQ,CACJe,WAAY,I,EAGhBnB,gBAAkB,SAACJ,GACf,IAAOuB,EAAc,EAAKf,MAAnBe,WAEP,EAAKV,SAAS,CACVU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM1B,Q,EAKzBe,aAAe,SAACU,GACZ,EAAKZ,SAAS,CAACU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,4CAG1D,WACI,IAAOF,EAAcP,KAAKR,MAAnBe,WAEP,OACI,sBAAKI,UAAU,YAAf,UACI,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GAzBvBM,aCClBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.46e22407.chunk.js","sourcesContent":["const TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Task</th>\r\n                <th>Description</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    });\r\n\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\nconst Table = (props) => {\r\n    const {characterData, removeCharacter} = props;\r\n\r\n    return (\r\n        <table >\r\n            <TableHeader />\r\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table","import React, {Component} from 'react';\r\n\r\nclass Form extends Component {\r\n    initialState = {\r\n        name: '',\r\n        job: '',\r\n    }\r\n    \r\n    state = this.initialState\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <label htmlFor=\"name\">Task</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <label htmlFor=\"job\">Description</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    id=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange} \r\n                />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form","import React, {Component} from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        characters: [],\r\n    };\r\n\r\n    removeCharacter = (index) => {\r\n        const {characters} = this.state\r\n    \r\n        this.setState({\r\n            characters: characters.filter((character, i) => {\r\n                return i !== index\r\n            }),\r\n        })\r\n    }\r\n\r\n    handleSubmit = (character) => {\r\n        this.setState({characters: [...this.state.characters, character]})\r\n    }\r\n\r\n    render() {\r\n        const {characters} = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\r\n                <Form handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}